<project name="Contribute Extra Build Steps" default="version">

	<property file="${user.home}/.ant-global.properties" />
	
	<target name="version">
		<property name="root.folder" value="${basedir}/../.." />
		<property name="versions.file" value="${basedir}/target/versions.txt" />
		<!-- <property name="versions.file" value="${basedir}/versions.txt" /> -->
		<!-- Grab version from dependency p2 -->
		<get src="${ote.ide.p2}/versions.txt" dest="${versions.file}"
			username="${ldap.uname}" password="${ldap.pw}" />
		<!-- Add OSEE Version -->
		<pathconvert property="version.bundle.path" setonempty="false">
			<path>
				<fileset dir="${basedir}/target/repository/plugins">
					<include name="org.eclipse.osee.framework.core_*" />
				</fileset>
			</path>
		</pathconvert>
		<basename property="version.bundle.base.path" file="${version.bundle.path}" />
		<propertyregex property="core.version" override="true"
			input="${version.bundle.base.path}" regexp="core_(.*).jar" select="\1"
			casesensitive="false" />

		<echo file="${versions.file}" append="true"
			message="OSEE build (ote.build.program): ${core.version}${line.separator}" />



		<if>
			<available file="${root.folder}/ote.ide.product/.git" type="dir"
				property="ote.ide.product.git.present" />
			<then>
				<antcall target="git.revision">
					<param name="param1" value="${root.folder}" />
					<param name="param2" value="ote.ide.product" />
				</antcall>
			</then>
		</if>
		
		<copy file="${versions.file}" tofile="target/products/ote.ide/linux/gtk/x86_64/versions.txt"/>
		<copy file="${versions.file}" tofile="target/products/ote.ide/linux/gtk/x86/versions.txt"/>
		<copy file="${versions.file}" tofile="target/products/ote.ide/win32/win32/x86_64/versions.txt"/>
		<copy file="${versions.file}" tofile="target/products/ote.ide/win32/win32/x86/versions.txt"/>
	
	</target>

	<target name="git.revision" description="Store git revision in ${repository.version}">
		<exec executable="git" outputproperty="git.branch"
			failifexecutionfails="false" errorproperty="git.error" dir="${param1}/${param2}">
			<arg value="rev-parse" />
			<arg value="--abbrev-ref" />
			<arg value="HEAD" />
		</exec>
		<exec executable="git" outputproperty="git.revision"
			failifexecutionfails="false" errorproperty="git.error" dir="${param1}/${param2}">
			<arg value="log" />
			<arg value="-1" />
			<arg value="--pretty=format:%H,%cd" />
		</exec>
		<condition property="repository.version" value="${git.revision}"
			else="unknown">
			<and>
				<isset property="git.revision" />
				<length string="${git.revision}" trim="yes" length="0" when="greater" />
			</and>
		</condition>

		<echo message="${param2},${git.branch},${repository.version}${line.separator}"
			file="${versions.file}" append="true" />

	</target>

</project>
